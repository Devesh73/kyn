import axios from "axios";
import React, { useState } from "react";
import PinInput from "react-pin-input";
import { useNavigate } from "react-router-dom";

const MultiFactor = () => {
  const [pin, setPin] = useState("");
  const [resultMessage, setResultMessage] = useState("");
  const navigate = useNavigate();

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      const response = await axios.post(
        "http://localhost:3000/verify", // Replace with your backend URL
        { token: pin }
      );
      if (response.data.verified) {
        setResultMessage("Code verified successfully!");
        navigate("/dashboard"); // Redirect to your chatbot page
      } else {
        setResultMessage("Invalid code! Please try again.");
      }
    } catch (error) {
      console.error("Error verifying code:", error);
      setResultMessage("An error occurred during verification.");
    }
  };

  return (
    <div className="flex items-center justify-center h-screen bg-white">
      <div className="flex w-[900px] h-[500px] rounded-lg overflow-hidden shadow-lg">
        {/* Left Side */}
        <div className="w-1/2 bg-gradient-to-br from-purple-500 to-purple-600 flex flex-col items-center justify-center p-8">
          <h1 className="text-3xl font-bold text-white">
            Two Factor Authentication
          </h1>
        </div>

        {/* Right Side */}
        <div className="w-1/2 bg-purple-100 p-8 flex flex-col justify-center">
          <h2 className="text-2xl text-purple-600 font-semibold mb-4">
            Google OAuth
          </h2>
          <p className="text-purple-700 mb-6">
            Open your Google Authenticator app to retrieve the verification
            code.
          </p>
          <form onSubmit={handleSubmit} className="flex flex-col">
            <label htmlFor="authCode" className="text-purple-700 mb-2">
              Enter the 6-digit authentication code generated by your app
            </label>
            <PinInput
              length={6}
              focus
              type="numeric"
              inputMode="number"
              onChange={(value) => setPin(value)}
              inputStyle={{
                borderColor: "#9b4dca", // Purple border color
                borderRadius: "8px",
                backgroundColor: "#f3f4f6", // Light background
                color: "#4b4b4b", // Dark text
              }}
              inputFocusStyle={{ borderColor: "#7c32a5" }} // Darker purple on focus
            />
            <button
              type="submit"
              className="w-80 h-12 mt-6 bg-gradient-to-r from-purple-500 via-purple-400 to-purple-500 text-white font-semibold rounded-full"
            >
              Submit
            </button>
          </form>
          {resultMessage && (
            <p className="mt-4 text-purple-700">{resultMessage}</p>
          )}
        </div>
      </div>
    </div>
  );
};

export default MultiFactor;
